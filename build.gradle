buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

/**
 * Generic support for building docker images for SpringBoot Apps
 */
task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = rootProject.name
  dockerfile = file('src/main/docker/Dockerfile')

  doFirst {
    // Rename the app jar to "app.jar" so that the Dockerfile does not require renames
    copy {
      from "${project.buildDir}/libs"
      into stageDir
      include "${rootProject.name}-${version}.jar"
      rename("${rootProject.name}-${version}.jar", "app.jar")
    }
  }

  doLast {
    println "Run the Docker Container"
    println "docker run -ti -p 8080:8080 $project.group/$applicationName:$version"
  }
} 

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
